### sign up
POST {{host}}/sign-up
Content-Type: application/json

{
  "userId":"ydj515",
  "email":"test@email.com",
  "name":"test",
  "password":"1234"
}

### login
POST {{host}}/api/auth/login
Content-Type: application/json

{
  "email": "test@naver.com",
  "password": "password"
}
> {%
    client.test("Validate", function() { // Validate라는 이름의 테스트를 수행
        client.assert(response.status === 200, "Response status is not 200"); // 응답값이 200이면 통과
        client.assert(response.contentType.mimeType === "application/json", "Expected 'application/json'"); // 응답값이 application/json이면 통과
        client.assert(response.body.data.access_token.trim().length > 0); // 토큰 길이가 0보다 크면 통과
    });

    client.log(response.body.data.access_token); // 토큰 값 로깅, body에는 응답받은 json이 객체 형식으로 저장된다. 즉 { accessToken:"value" }가 응답이라면, 여기선 value라 로깅된다.
    client.global.set("access_token",response.body.data.access_token) // 토큰 값을 global 변수에 set
%}

### test url
POST http://localhost:8080/api/auth/test
Content-Type: application/json
Authorization: Bearer {{access_token}}